document.querySelector('mutation-test-report-app').report = {"files":{"C:\\Users\\benjaminng\\Documents\\GitHub\\strykerpoc\\src\\api\\web\\health\\healthcheckApi.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":2,"line":7},"start":{"column":41,"line":1}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"1","location":{"end":{"column":16,"line":2},"start":{"column":13,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2","location":{"end":{"column":6,"line":6},"start":{"column":38,"line":2}},"mutatorName":"Block","replacement":"{}","status":"Timeout"},{"id":"3","location":{"end":{"column":10,"line":5},"start":{"column":18,"line":3}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"},{"id":"4","location":{"end":{"column":51,"line":4},"start":{"column":22,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Timeout"},{"id":"5","location":{"end":{"column":2,"line":11},"start":{"column":18,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Timeout"}],"source":"const registerHealthCheckApi = (app) => {\r\n    app.get('/', function (req, res) {\r\n        res.json({\r\n            message: 'hooray! welcome to our api!'\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    registerHealthCheckApi\r\n}\r\n\r\n"},"C:\\Users\\benjaminng\\Documents\\GitHub\\strykerpoc\\src\\calculator.js":{"language":"javascript","mutants":[{"id":"6","location":{"end":{"column":2,"line":8},"start":{"column":39,"line":1}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"7","location":{"end":{"column":15,"line":2},"start":{"column":7,"line":2}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"8","location":{"end":{"column":15,"line":2},"start":{"column":7,"line":2}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"10","location":{"end":{"column":15,"line":2},"start":{"column":7,"line":2}},"mutatorName":"BinaryExpression","replacement":"num1 <= 0","status":"Killed"},{"id":"9","location":{"end":{"column":15,"line":2},"start":{"column":7,"line":2}},"mutatorName":"BinaryExpression","replacement":"num1 >= 0","status":"Survived"},{"id":"13","location":{"end":{"column":4,"line":7},"start":{"column":8,"line":5}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"14","location":{"end":{"column":2,"line":21},"start":{"column":25,"line":10}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"15","location":{"end":{"column":19,"line":11},"start":{"column":7,"line":11}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"16","location":{"end":{"column":19,"line":11},"start":{"column":7,"line":11}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"18","location":{"end":{"column":4,"line":13},"start":{"column":20,"line":11}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"17","location":{"end":{"column":19,"line":11},"start":{"column":7,"line":11}},"mutatorName":"BinaryExpression","replacement":"num1 != num2","status":"Survived"},{"id":"22","location":{"end":{"column":23,"line":14},"start":{"column":12,"line":14}},"mutatorName":"BinaryExpression","replacement":"num1 >= num2","status":"Survived"},{"id":"11","location":{"end":{"column":4,"line":4},"start":{"column":16,"line":2}},"mutatorName":"Block","replacement":"{}","status":"Timeout"},{"id":"23","location":{"end":{"column":23,"line":14},"start":{"column":12,"line":14}},"mutatorName":"BinaryExpression","replacement":"num1 <= num2","status":"Survived"},{"id":"25","location":{"end":{"column":23,"line":15},"start":{"column":12,"line":15}},"mutatorName":"BinaryExpression","replacement":"num1 - num2","status":"Survived"},{"id":"12","location":{"end":{"column":23,"line":3},"start":{"column":12,"line":3}},"mutatorName":"BinaryExpression","replacement":"num1 + num2","status":"Timeout"},{"id":"27","location":{"end":{"column":23,"line":18},"start":{"column":12,"line":18}},"mutatorName":"BinaryExpression","replacement":"num1 - num2","status":"Survived"},{"id":"20","location":{"end":{"column":23,"line":14},"start":{"column":12,"line":14}},"mutatorName":"IfStatement","replacement":"false","status":"Timeout"},{"id":"19","location":{"end":{"column":23,"line":12},"start":{"column":12,"line":12}},"mutatorName":"BinaryExpression","replacement":"num1 - num2","status":"Timeout"},{"id":"21","location":{"end":{"column":23,"line":14},"start":{"column":12,"line":14}},"mutatorName":"IfStatement","replacement":"true","status":"Timeout"},{"id":"24","location":{"end":{"column":4,"line":16},"start":{"column":24,"line":14}},"mutatorName":"Block","replacement":"{}","status":"Timeout"},{"id":"26","location":{"end":{"column":4,"line":19},"start":{"column":8,"line":17}},"mutatorName":"Block","replacement":"{}","status":"Timeout"}],"source":"function substractPositive(num1, num2){\n  if (num1 > 0){\n    return num1 - num2;\n  }\n  else {\n    return 0\n  }\n}\n\nfunction add(num1, num2){\n  if (num1 == num2){\n    return num1 + num2;\n  }\n  else if (num1 > num2){\n    return num1 + num2;\n  }\n  else {\n    return num1 + num2;\n  }\n  //return num1 + num2;\n}\n\n\nmodule.exports.substractPositive = substractPositive\nmodule.exports.add = add;\n"},"C:\\Users\\benjaminng\\Documents\\GitHub\\strykerpoc\\src\\sum.js":{"language":"javascript","mutants":[{"id":"28","location":{"end":{"column":2,"line":3},"start":{"column":20,"line":1}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"29","location":{"end":{"column":15,"line":2},"start":{"column":10,"line":2}},"mutatorName":"BinaryExpression","replacement":"a - b","status":"Killed"}],"source":"function sum(a, b) {\r\n  return a + b;\r\n}\r\nmodule.exports = sum;"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};